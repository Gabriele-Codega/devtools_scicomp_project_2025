Timer unit: 1e-06 s

Total time: 0 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py
Function: distance at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def distance(point1: list[float], point2: list[float]) -> float:
     8                                               distance = 0
     9                                               for x1,x2 in zip(point1,point2):
    10                                                   distance += (x1-x2)*(x1-x2)
    11                                           
    12                                               return distance

Total time: 0.002028 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py
Function: majority_vote at line 14

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    14                                           @profile
    15                                           def majority_vote(neighbors: list[int]) -> int:
    16       281        226.0      0.8     11.1      labels = range(max(neighbors)+1)
    17       281        209.0      0.7     10.3      counts = [ 0 for _ in labels ]
    18       281        191.0      0.7      9.4      votes = dict(zip(labels,counts)) 
    19                                           
    20      1686        449.0      0.3     22.1      for label in neighbors:
    21      1405        630.0      0.4     31.1          votes[label] += 1
    22                                           
    23       281        323.0      1.1     15.9      return max(votes, key=lambda key: votes[key])

Total time: 0.047126 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py
Function: distance_numpy at line 42

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    42                                           @profile
    43                                           def distance_numpy(point1: np.ndarray, point2: np.ndarray) -> float:
    44     19670      18471.0      0.9     39.2      d = point1-point2
    45     19670      28655.0      1.5     60.8      return np.dot(d,d)

Total time: 0.111991 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py
Function: _get_k_nearest_neighbors at line 23

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    23                                               @profile
    24                                               def _get_k_nearest_neighbors(self, X: Union[list[list[float]], np.ndarray], y: Union[list[int], np.ndarray], x: Union[list[float], np.ndarray]) -> list[int]:
    25       281     103895.0    369.7     92.8          distances = list(map(partial(self.distance,x),X))
    26                                           
    27       281       6525.0     23.2      5.8          nn = sorted(range(len(distances)), key= lambda i: distances[i])
    28                                           
    29       281         90.0      0.3      0.1          labels = []
    30      1686        719.0      0.4      0.6          for idx in nn[:self.n_neigh]:
    31      1405        712.0      0.5      0.6              labels.append(y[idx])
    32       281         50.0      0.2      0.0          return labels

Total time: 0.119097 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py
Function: __call__ at line 34

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    34                                               @profile
    35                                               def __call__(self, data: tuple[list[list[float]],list[int]], new_points: list[list[float]]):
    36         1          1.0      1.0      0.0          if self.backend == 'numpy':
    37         1        128.0    128.0      0.1              data = (np.array(data[0]), np.array(data[1]))
    38         1        410.0    410.0      0.3              new_points = np.array(new_points)
    39         1     114534.0 114534.0     96.2          nn_labels = list(map(partial(self._get_k_nearest_neighbors,*data), new_points))
    40         1       4024.0   4024.0      3.4          prediction = list(map(majority_vote,nn_labels))
    41         1          0.0      0.0      0.0          return prediction

  0.00 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py:6 - distance
  0.00 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py:14 - majority_vote
  0.05 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py:42 - distance_numpy
  0.11 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py:23 - _get_k_nearest_neighbors
  0.12 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py:34 - __call__
