Timer unit: 1e-06 s

Total time: 0 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py
Function: distance at line 6

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     6                                           @profile
     7                                           def distance(point1: list[float], point2: list[float]) -> float:
     8                                               distance = 0
     9                                               for x1,x2 in zip(point1,point2):
    10                                                   distance += (x1-x2)*(x1-x2)
    11                                           
    12                                               return distance

Total time: 0.08565 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py
Function: majority_vote at line 14

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    14                                           @profile
    15                                           def majority_vote(neighbors: list[int]) -> int:
    16      3681       3307.0      0.9      3.9      labels = range(max(neighbors)+1)
    17      3681      16880.0      4.6     19.7      counts = [ 0 for _ in labels ]
    18      3681      10480.0      2.8     12.2      votes = dict(zip(labels,counts)) 
    19                                           
    20     22086       6231.0      0.3      7.3      for label in neighbors:
    21     18405       8816.0      0.5     10.3          votes[label] += 1
    22                                           
    23      3681      39936.0     10.8     46.6      return max(votes, key=lambda key: votes[key])

Total time: 7.78981 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py
Function: distance_numpy at line 43

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    43                                           @profile
    44                                           def distance_numpy(point1: np.ndarray, point2: np.ndarray) -> float:
    45   3386520    3293061.0      1.0     42.3      d = point1-point2
    46   3386520    4496749.0      1.3     57.7      return np.dot(d,d)

Total time: 18.7823 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py
Function: _get_k_nearest_neighbors at line 23

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    23                                               @profile
    24                                               def _get_k_nearest_neighbors(self, X: Union[list[list[float]], np.ndarray], y: Union[list[int], np.ndarray], x: Union[list[float], np.ndarray]) -> list[int]:
    25      3681   17425793.0   4734.0     92.8          distances = list(map(partial(self.distance,x),X))
    26                                           
    27      3681    1331132.0    361.6      7.1          nn = sorted(range(len(distances)), key= lambda i: distances[i])
    28                                           
    29      3681       1567.0      0.4      0.0          labels = []
    30     22086      10276.0      0.5      0.1          for idx in nn[:self.n_neigh]:
    31     18405      12501.0      0.7      0.1              labels.append(y[idx])
    32      3681       1013.0      0.3      0.0          return labels

Total time: 18.9993 s
File: /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py
Function: __call__ at line 34

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    34                                               @profile
    35                                               def __call__(self, data: tuple[list[list[float]],list[int]], new_points: list[list[float]]):
    36         1          4.0      4.0      0.0          if self.backend == 'numpy':
    37         1       3091.0   3091.0      0.0              data = (np.array(data[0]), np.array(data[1]))
    38         1      12374.0  12374.0      0.1              new_points = np.array(new_points)
    39         1   18868183.0    2e+07     99.3          nn_labels = list(map(partial(self._get_k_nearest_neighbors,*data), new_points))
    40         1     115639.0 115639.0      0.6          prediction = list(map(majority_vote,nn_labels))
    41         1          0.0      0.0      0.0          return prediction

  0.00 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py:6 - distance
  0.09 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py:14 - majority_vote
  7.79 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/utils.py:43 - distance_numpy
 18.78 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py:23 - _get_k_nearest_neighbors
 19.00 seconds - /Users/gabrielecodega/Documents/amma/dev_tools/devtools_scicomp_project_2025/src/pyclassify/classifier.py:34 - __call__
